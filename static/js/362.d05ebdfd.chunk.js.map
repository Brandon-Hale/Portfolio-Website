{"version":3,"file":"static/js/362.d05ebdfd.chunk.js","mappings":"iLAGA,MAAMA,EAAWC,IAAA,IAAC,MAChBC,EAAK,KAAEC,EAAI,MAAEC,GACdH,EAAA,OACCI,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAKF,SAAEJ,KACjBK,EAAAA,EAAAA,KAAA,MAAAD,SAAKH,GAAOI,EAAAA,EAAAA,KAAA,KAAGE,KAAMN,EAAMO,OAAO,WAAUJ,SAAEF,IAAaA,MACxD,EAaPJ,EAASW,aAAe,CACtBR,KAAM,KACNC,MAAO,MAGT,UCOA,EA7BcH,IAAA,IAAC,KAAEW,GAAMX,EAAA,OACrBM,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACGM,EAAKC,KAAKC,IACTP,EAAAA,EAAAA,KAACP,EAAQ,CAEPE,MAAOY,EAAKZ,MACZC,KAAMW,EAAKX,KACXC,MAAOU,EAAKV,OAHPU,EAAKZ,YAOV,ECfJa,EAAMA,KACV,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,YActB,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAPfC,MACX,MACMC,EAAY,IAAIC,KAAK,uBAC3BP,IAASO,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,IAAI,EAIxBJ,IAAQ,IACxC,MAAO,KACLK,cAAcP,EAAM,CACrB,GACA,KACIb,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SAAGU,GAAO,EAsBnB,EAnBa,CACX,CACEa,IAAK,MACL3B,MAAO,cACPE,OAAOG,EAAAA,EAAAA,KAACQ,EAAG,KAEb,CACEc,IAAK,YACL3B,MAAO,oBACPE,MAAO,GACPD,KAAM,2FAER,CACE0B,IAAK,WACL3B,MAAO,eACPE,MAAO,qBCxBX,EAPsB0B,KACpBzB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAACwB,EAAK,CAACnB,KAAMA,OCgCjB,EAnCa,CACX,CACEV,MAAO,qCACPE,MAAO,gBAET,CACEF,MAAO,oCACPE,MAAO,YAET,CACEF,MAAO,iCACPE,MAAO,SAET,CACEF,MAAO,gCACPE,MAAO,QAET,CACEF,MAAO,yCACPE,MAAO,KAET,CACEF,MAAO,2BACPE,MAAO,KAET,CACEF,MAAO,4CACPE,MAAO,QAET,CACEF,MAAO,qCACPE,MAAO,aClBX,EAZc4B,KACZ,MAAOpB,IAAQM,EAAAA,EAAAA,UAASe,GAGxB,OACE5B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAACwB,EAAK,CAACnB,KAAMA,MACT,ECcV,EAnBcoB,KACZzB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHC,MAAM,QACNC,YAAY,mDAAkD9B,UAE9DD,EAAAA,EAAAA,MAAA,WAASgC,UAAU,OAAOC,GAAG,QAAOhC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,QAAO/B,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACC,GAAG,SAAQlC,SAAC,iBAIxBC,EAAAA,EAAAA,KAACkC,EAAQ,KACTlC,EAAAA,EAAAA,KAACmC,EAAI,Q","sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","data/stats/site.js","components/Stats/Site.js","pages/Stats.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({\r\n  label, link, value,\r\n}) => (\r\n  <tr>\r\n    <td width=\"70%\">{label}</td>\r\n    <td>{link ? <a href={link} target=\"noopener\">{value}</a> : value}</td>\r\n  </tr>\r\n);\r\n\r\nTableRow.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  link: null,\r\n  value: null,\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ data }) => (\r\n  <table>\r\n    <tbody>\r\n      {data.map((pair) => (\r\n        <TableRow\r\n          key={pair.label}\r\n          label={pair.label}\r\n          link={pair.link}\r\n          value={pair.value}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string,\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Age = () => {\r\n  const [age, setAge] = useState();\r\n\r\n  const tick = () => {\r\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\r\n    const birthTime = new Date('2004-05-07T13:24:00');\r\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => tick(), 25);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return <>{age}</>;\r\n};\r\n\r\nconst data = [\r\n  {\r\n    key: 'age',\r\n    label: 'Current age',\r\n    value: <Age />,\r\n  },\r\n  {\r\n    key: 'countries',\r\n    label: 'Countries visited',\r\n    value: 18,\r\n    link: 'https://www.google.com/maps/d/u/0/edit?mid=1LjYHoi-LQGfPqcwD9i8sTeyQMLiGf7Y&usp=sharing',\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Perth, Australia',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport Table from './Table';\r\nimport data from '../../data/stats/personal';\r\n\r\nconst PersonalStats = () => (\r\n  <>\r\n    <h3>Some stats about me</h3>\r\n    <Table data={data} />\r\n  </>\r\n);\r\n\r\nexport default PersonalStats;\r\n","/* Keys match keys returned by the github api. Fields without keys are\r\n * mostly jokes. To see everything returned by the github api, run:\r\n curl https://api.github.com/repos/mldangelo/personal-site\r\n */\r\nconst data = [\r\n  {\r\n    label: 'First video game played (at age 3)',\r\n    value: 'Halo on Xbox',\r\n  },\r\n  {\r\n    label: 'Favourite sport played growing up',\r\n    value: 'Baseball',\r\n  },\r\n  {\r\n    label: 'Amount of hours sunk into Rust',\r\n    value: '9,364',\r\n  },\r\n  {\r\n    label: 'First coding language learned',\r\n    value: 'Java',\r\n  },\r\n  {\r\n    label: 'Sporting championships won in my years',\r\n    value: '5',\r\n  },\r\n  {\r\n    label: 'Screens in current setup',\r\n    value: '3',\r\n  },\r\n  {\r\n    label: 'Lines of Javascript powering this website',\r\n    value: '2150',\r\n  },\r\n  {\r\n    label: 'Bugs fixed with a single semicolon',\r\n    value: 'Too many',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useState } from 'react';\r\n\r\nimport Table from './Table';\r\nimport initialData from '../../data/stats/site';\r\n\r\nconst Stats = () => {\r\n  const [data] = useState(initialData);\r\n  // TODO think about persisting this somewhere\r\n\r\n  return (\r\n    <div>\r\n      <h3>Some other stats about me</h3>\r\n      <Table data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Personal from '../components/Stats/Personal';\r\nimport Site from '../components/Stats/Site';\r\n\r\nconst Stats = () => (\r\n  <Main\r\n    title=\"Stats\"\r\n    description=\"Some statistics about Brandon Hale and bhale.com\"\r\n  >\r\n    <article className=\"post\" id=\"stats\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2>\r\n            <Link to=\"/stats\">Stats</Link>\r\n          </h2>\r\n        </div>\r\n      </header>\r\n      <Personal />\r\n      <Site />\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Stats;\r\n"],"names":["TableRow","_ref","label","link","value","_jsxs","children","_jsx","width","href","target","defaultProps","data","map","pair","Age","age","setAge","useState","useEffect","timer","setInterval","tick","birthTime","Date","now","toFixed","clearInterval","_Fragment","key","PersonalStats","Table","Stats","initialData","Main","title","description","className","id","Link","to","Personal","Site"],"sourceRoot":""}